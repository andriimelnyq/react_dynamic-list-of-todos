{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","React","memo","todos","setSelectedTodo","selectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","filterStatus","setFilterStatus","query","setQuery","value","onChange","e","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","loadUser","a","userId","currentUser","useEffect","href","email","name","App","todosFromServer","setTodosFromServer","loadTodos","todosList","useMemo","filter","toLocaleLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"oQASaA,EAA4BC,IAAMC,MAC7C,gBACEC,EADF,EACEA,MAAOC,EADT,EACSA,gBAAiBC,EAD1B,EAC0BA,aAD1B,OAGE,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAAAC,GAAI,OACb,qBACE,UAAQ,OAERF,UAAWE,IAASH,EAChB,4BACA,GALN,UAOE,oBAAIC,UAAU,eAAd,SAA8BE,EAAKC,KACnC,oBAAIH,UAAU,eAAd,SACGE,EAAKE,WACJ,sBAAMJ,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWE,EAAKE,UACf,mBACA,kBAFJ,SAIGF,EAAKG,UAGV,oBAAIL,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVM,KAAK,SACLC,QAAS,kBAAMT,EAAgBI,IAJjC,SAME,sBAAMF,UAAU,OAAhB,SACE,mBACEA,UAAWE,IAASH,EAChB,mBACA,uBAhCPG,EAAKC,eCtBTK,EAA8B,SAAC,GAErC,IADLC,EACI,EADJA,aAAcC,EACV,EADUA,gBAAiBC,EAC3B,EAD2BA,MAAOC,EAClC,EADkCA,SAEtC,OACE,uBAAMZ,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRa,MAAOJ,EACPK,SAAU,SAAAC,GAAC,OAAIL,EAAgBK,EAAEC,OAAOH,QAH1C,UAKE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGb,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRM,KAAK,OACLN,UAAU,QACViB,YAAY,YACZJ,MAAOF,EACPG,SAAU,SAAAC,GAAC,OAAIH,EAASG,EAAEC,OAAOH,UAEnC,sBAAMb,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdW,GACC,sBAAMX,UAAU,gBAAgBkB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRb,KAAK,SACLN,UAAU,SACVO,QAAS,kBAAMK,EAAS,gBC7CzBQ,G,MAAmB,kBAC9B,qBAAKpB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCOnB,SAASqB,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICVMC,EAA6B,SAAC,GAEpC,IADLjC,EACI,EADJA,aAAcD,EACV,EADUA,gBAEd,EAAwBmC,mBAAsB,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAQ,uCAAG,4BAAAC,EAAA,sEDOKC,ECNcvC,EAAauC,ODMRjB,EAAG,iBAAiBiB,ICP5C,OACTC,EADS,OAGfJ,EAAQI,GAHO,iCDOI,IAACD,ICPL,OAAH,qDAUd,OAJAE,qBAAU,WACRJ,MACC,IAGD,sBAAKpC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEbkC,EAGA,sBAAKlC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYD,EAAaI,MAIzB,wBACEG,KAAK,SACLN,UAAU,SACV,UAAQ,cACRO,QAAS,kBAAMT,EAAgB,YAInC,sBAAKE,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGD,EAAaM,QAGhB,oBAAGL,UAAU,QAAQ,UAAQ,aAA7B,UACGD,EAAaK,UACV,wBAAQJ,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBAEH,OAED,mBAAGyC,KAAI,iBAAYP,EAAKQ,OAAxB,SACGR,EAAKS,gBAjCd,cAAC,EAAD,QClBKC,EAAgB,WAC3B,MAA8CX,mBAAiB,IAA/D,mBAAOY,EAAP,KAAwBC,EAAxB,KACA,EAAwCb,mBAAsB,MAA9D,mBAAOlC,EAAP,KAAqBD,EAArB,KACA,EAAwCmC,mBAAS,IAAjD,mBAAOxB,EAAP,KAAqBC,EAArB,KACA,EAA0BuB,mBAAS,IAAnC,mBAAOtB,EAAP,KAAcC,EAAd,KAEMmC,EAAS,uCAAG,4BAAAV,EAAA,sEFEUhB,EAAY,UEFtB,OACV2B,EADU,OAGhBF,EAAmBE,GAHH,2CAAH,qDAMfR,qBAAU,WACRO,MACC,IAEH,IAAMlD,EAAQoD,mBAAQ,kBACpBJ,EACGK,QAAO,SAAAhD,GAAI,OAAIA,EAAKG,MAAM8C,oBAAoBC,SAASzC,EAAMwC,wBAC7DD,QAAO,SAAAhD,GACN,OAAQO,GACN,IAAK,YACH,OAAOP,EAAKE,UAEd,IAAK,SACH,OAAQF,EAAKE,UAEf,QACE,OAAO,QAGd,CAACK,EAAcoC,EAAiBlC,IAEnC,OACE,qCACE,qBAAKX,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACES,aAAcA,EACdC,gBAAiBA,EACjBC,MAAOA,EACPC,SAAUA,MAId,qBAAKZ,UAAU,QAAf,SACI6C,EAAgBQ,OAGd,cAAC3D,EAAD,CACEG,MAAOA,EACPC,gBAAiBA,EACjBC,aAAcA,IALhB,cAAC,EAAD,aAaXA,GACC,cAAC,EAAD,CACEA,aAAcA,EACdD,gBAAiBA,QC7E3BwD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.89357cbf.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setSelectedTodo: (todo: Todo) => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = React.memo(\n  ({\n    todos, setSelectedTodo, selectedTodo,\n  }) => (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n            className={todo === selectedTodo\n              ? 'has-background-info-light'\n              : ''}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={todo === selectedTodo\n                      ? 'far fa-eye-slash'\n                      : 'far fa-eye'}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  ),\n);\n","import React from 'react';\n\ntype Props = {\n  filterStatus: string,\n  setFilterStatus: (status: string) => void,\n  query: string,\n  setQuery: (query: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterStatus, setFilterStatus, query, setQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterStatus}\n            onChange={e => setFilterStatus(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo,\n  setSelectedTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo, setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const loadUser = async () => {\n    const currentUser = await getUser(selectedTodo.userId);\n\n    setUser(currentUser);\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterStatus, setFilterStatus] = useState('');\n  const [query, setQuery] = useState('');\n\n  const loadTodos = async () => {\n    const todosList = await getTodos();\n\n    setTodosFromServer(todosList);\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const todos = useMemo(() => (\n    todosFromServer\n      .filter(todo => todo.title.toLocaleLowerCase().includes(query.toLocaleLowerCase()))\n      .filter(todo => {\n        switch (filterStatus) {\n          case 'completed':\n            return todo.completed;\n\n          case 'active':\n            return !todo.completed;\n\n          default:\n            return true;\n        }\n      })\n  ), [filterStatus, todosFromServer, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterStatus={filterStatus}\n                setFilterStatus={setFilterStatus}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todosFromServer.length\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={todos}\n                    setSelectedTodo={setSelectedTodo}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}